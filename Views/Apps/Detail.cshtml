@{
    ViewBag.Title = ViewBag.id;
	var state = ViewBag.state as Tuple<DateTime?, string>;
}

<h1>@ViewBag.id</h1>

@helper time(DateTime? when) {
	if(when == null) {
		<span class="time">never</span>
		return;
	}
	var ms = (long)(when.Value - DateTime.Now).TotalMilliseconds;
	<span class="time" data-date="@ms"></span>
}

State: <span class="state @state.Item2">@state.Item2</span>
@switch((string)state.Item2) {
    case "building":
        <span>started @time(state.Item1)</span>
        break;
    case "idle":
        <span>last built @time(state.Item1)</span>
        break;
    case "failed":
        <span>@time(state.Item1)</span>
        break;
}


@if(ViewBag.logcreated != null) {
    <a href="@Url.Action("log", new { id = ViewBag.id })" style="font-size:9pt;">see build log &rarr;</a>
}

<!--div>
    Webhook: <code style="background-color:#eee;">@Request.Url.GetLeftPart(UriPartial.Authority)/apps/hook/@ViewBag.id</code>
</div-->
<br />
@using(Html.BeginForm(new { action = "build", id = @ViewBag.id })) {
    <input type="submit" value="build now" />
}

<h3>config</h3>
<dl style="font-family:monospace;font-size:9pt;">
@foreach(var pair in ViewBag.config) {
    <dt style="font-weight:bold">@pair.Key</dt>
    <dd>@pair.Value</dd>
}
</dl>

@section scripts {
	<script>
		var state = null;
		function checkstate() {
			$.get('/apps/state/@ViewBag.id', {}, function(res, textStatus) {
				if(state != null && res != state) {
					document.location.reload();
				}
				state = res;
				var timeout = 60 * 1000; // 1 minute
				if(state == 'building') {
					timeout = 500; // 500 ms (check frequently while building)
				}
				setTimeout(checkstate, timeout);
			});
		}

		checkstate();
		
	</script>
}


